import { useEffect, useRef, useState } from "react";
import "./Search.css";

const Search = () => {
  const [filterVisible, setFilterVisible] = useState(false);
  const filterRef = useRef(null);

  return (
    <main>
      <div className="search">
        <h1>Search for any topic and find viral posts to get inspired by</h1>
        <p>We use AI to analyse posts and match them with your search</p>
        <div className="search-input">
          <button>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="26"
              height="27"
              viewBox="0 0 26 27"
              fill="none"
            >
              <path
                d="M24.5 25L18.9507 19.4507M18.9507 19.4507C19.8999 18.5014 20.6529 17.3745 21.1666 16.1343C21.6803 14.8941 21.9447 13.5648 21.9447 12.2224C21.9447 10.8799 21.6803 9.55067 21.1666 8.31044C20.6529 7.0702 19.8999 5.9433 18.9507 4.99406C18.0014 4.04483 16.8745 3.29185 15.6343 2.77813C14.3941 2.26441 13.0648 2 11.7224 2C10.3799 2 9.05067 2.26441 7.81044 2.77813C6.5702 3.29185 5.4433 4.04483 4.49406 4.99406C2.577 6.91113 1.5 9.51123 1.5 12.2224C1.5 14.9335 2.577 17.5336 4.49406 19.4507C6.41113 21.3677 9.01123 22.4447 11.7224 22.4447C14.4335 22.4447 17.0336 21.3677 18.9507 19.4507Z"
                stroke="#E5E5EB"
                stroke-width="2.875"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>
          </button>
          <input type="text" placeholder="Search" />
          <button
            onClick={(e) => {
              // console.log(filterRef);
              console.log(e);
              filterRef.current.style.top = e.pageY + 10 + "px";
              filterRef.current.style.left = e.pageX + 10 + "px";
              setFilterVisible(!filterVisible);
            }}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="17"
              height="19"
              viewBox="0 0 17 19"
              fill="none"
            >
              <path
                d="M5.5 2.50001C5.23478 2.50001 4.98043 2.60537 4.79289 2.7929C4.60536 2.98044 4.5 3.23479 4.5 3.50001C4.5 3.76523 4.60536 4.01958 4.79289 4.20712C4.98043 4.39465 5.23478 4.50001 5.5 4.50001C5.76522 4.50001 6.01957 4.39465 6.20711 4.20712C6.39464 4.01958 6.5 3.76523 6.5 3.50001C6.5 3.23479 6.39464 2.98044 6.20711 2.7929C6.01957 2.60537 5.76522 2.50001 5.5 2.50001ZM2.67 2.50001C2.8766 1.91448 3.25974 1.40744 3.7666 1.0488C4.27346 0.690154 4.87909 0.497559 5.5 0.497559C6.12091 0.497559 6.72654 0.690154 7.2334 1.0488C7.74026 1.40744 8.1234 1.91448 8.33 2.50001H15.5C15.7652 2.50001 16.0196 2.60537 16.2071 2.7929C16.3946 2.98044 16.5 3.23479 16.5 3.50001C16.5 3.76523 16.3946 4.01958 16.2071 4.20712C16.0196 4.39465 15.7652 4.50001 15.5 4.50001H8.33C8.1234 5.08554 7.74026 5.59258 7.2334 5.95122C6.72654 6.30986 6.12091 6.50246 5.5 6.50246C4.87909 6.50246 4.27346 6.30986 3.7666 5.95122C3.25974 5.59258 2.8766 5.08554 2.67 4.50001H1.5C1.23478 4.50001 0.98043 4.39465 0.792893 4.20712C0.605357 4.01958 0.5 3.76523 0.5 3.50001C0.5 3.23479 0.605357 2.98044 0.792893 2.7929C0.98043 2.60537 1.23478 2.50001 1.5 2.50001H2.67ZM11.5 8.50001C11.2348 8.50001 10.9804 8.60537 10.7929 8.7929C10.6054 8.98044 10.5 9.23479 10.5 9.50001C10.5 9.76523 10.6054 10.0196 10.7929 10.2071C10.9804 10.3947 11.2348 10.5 11.5 10.5C11.7652 10.5 12.0196 10.3947 12.2071 10.2071C12.3946 10.0196 12.5 9.76523 12.5 9.50001C12.5 9.23479 12.3946 8.98044 12.2071 8.7929C12.0196 8.60537 11.7652 8.50001 11.5 8.50001ZM8.67 8.50001C8.8766 7.91448 9.25974 7.40744 9.7666 7.0488C10.2735 6.69015 10.8791 6.49756 11.5 6.49756C12.1209 6.49756 12.7265 6.69015 13.2334 7.0488C13.7403 7.40744 14.1234 7.91448 14.33 8.50001H15.5C15.7652 8.50001 16.0196 8.60537 16.2071 8.7929C16.3946 8.98044 16.5 9.23479 16.5 9.50001C16.5 9.76523 16.3946 10.0196 16.2071 10.2071C16.0196 10.3947 15.7652 10.5 15.5 10.5H14.33C14.1234 11.0855 13.7403 11.5926 13.2334 11.9512C12.7265 12.3099 12.1209 12.5025 11.5 12.5025C10.8791 12.5025 10.2735 12.3099 9.7666 11.9512C9.25974 11.5926 8.8766 11.0855 8.67 10.5H1.5C1.23478 10.5 0.98043 10.3947 0.792893 10.2071C0.605357 10.0196 0.5 9.76523 0.5 9.50001C0.5 9.23479 0.605357 8.98044 0.792893 8.7929C0.98043 8.60537 1.23478 8.50001 1.5 8.50001H8.67ZM5.5 14.5C5.23478 14.5 4.98043 14.6054 4.79289 14.7929C4.60536 14.9804 4.5 15.2348 4.5 15.5C4.5 15.7652 4.60536 16.0196 4.79289 16.2071C4.98043 16.3947 5.23478 16.5 5.5 16.5C5.76522 16.5 6.01957 16.3947 6.20711 16.2071C6.39464 16.0196 6.5 15.7652 6.5 15.5C6.5 15.2348 6.39464 14.9804 6.20711 14.7929C6.01957 14.6054 5.76522 14.5 5.5 14.5ZM2.67 14.5C2.8766 13.9145 3.25974 13.4074 3.7666 13.0488C4.27346 12.6902 4.87909 12.4976 5.5 12.4976C6.12091 12.4976 6.72654 12.6902 7.2334 13.0488C7.74026 13.4074 8.1234 13.9145 8.33 14.5H15.5C15.7652 14.5 16.0196 14.6054 16.2071 14.7929C16.3946 14.9804 16.5 15.2348 16.5 15.5C16.5 15.7652 16.3946 16.0196 16.2071 16.2071C16.0196 16.3947 15.7652 16.5 15.5 16.5H8.33C8.1234 17.0855 7.74026 17.5926 7.2334 17.9512C6.72654 18.3099 6.12091 18.5025 5.5 18.5025C4.87909 18.5025 4.27346 18.3099 3.7666 17.9512C3.25974 17.5926 2.8766 17.0855 2.67 16.5H1.5C1.23478 16.5 0.98043 16.3947 0.792893 16.2071C0.605357 16.0196 0.5 15.7652 0.5 15.5C0.5 15.2348 0.605357 14.9804 0.792893 14.7929C0.98043 14.6054 1.23478 14.5 1.5 14.5H2.67Z"
                fill="#636363"
              />
            </svg>
          </button>
        </div>
        <div className="tags">
          <Tag text="Marketing" />
          <Tag text="crypto" />
          <Tag text="saas" />
          <Tag text="audience" />
          <Tag text="gaming" />
          <Tag text="startup" />
        </div>
      </div>
      <Filter
        visible={filterVisible}
        setVisible={setFilterVisible}
        currRef={filterRef}
      />
    </main>
  );
};

const Filter = ({ currRef, visible, setVisible }) => {
  let timeout;

  return (
    <div
      onMouseEnter={() => {
        clearTimeout(timeout);
      }}
      onMouseLeave={() => {
        timeout = setTimeout(() => {
          setVisible(false);
        }, 500);
      }}
      ref={currRef}
      className={visible ? "adv-filters visible" : "adv-filters"}
    >
      <header>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="18"
          viewBox="0 0 16 18"
          fill="none"
        >
          <path
            d="M5 2.00001C4.73478 2.00001 4.48043 2.10537 4.29289 2.2929C4.10536 2.48044 4 2.73479 4 3.00001C4 3.26523 4.10536 3.51958 4.29289 3.70712C4.48043 3.89465 4.73478 4.00001 5 4.00001C5.26522 4.00001 5.51957 3.89465 5.70711 3.70712C5.89464 3.51958 6 3.26523 6 3.00001C6 2.73479 5.89464 2.48044 5.70711 2.2929C5.51957 2.10537 5.26522 2.00001 5 2.00001ZM2.17 2.00001C2.3766 1.41448 2.75974 0.907443 3.2666 0.548799C3.77346 0.190154 4.37909 -0.00244141 5 -0.00244141C5.62091 -0.00244141 6.22654 0.190154 6.7334 0.548799C7.24026 0.907443 7.6234 1.41448 7.83 2.00001H15C15.2652 2.00001 15.5196 2.10537 15.7071 2.2929C15.8946 2.48044 16 2.73479 16 3.00001C16 3.26523 15.8946 3.51958 15.7071 3.70712C15.5196 3.89465 15.2652 4.00001 15 4.00001H7.83C7.6234 4.58554 7.24026 5.09258 6.7334 5.45122C6.22654 5.80986 5.62091 6.00246 5 6.00246C4.37909 6.00246 3.77346 5.80986 3.2666 5.45122C2.75974 5.09258 2.3766 4.58554 2.17 4.00001H1C0.734784 4.00001 0.48043 3.89465 0.292893 3.70712C0.105357 3.51958 0 3.26523 0 3.00001C0 2.73479 0.105357 2.48044 0.292893 2.2929C0.48043 2.10537 0.734784 2.00001 1 2.00001H2.17ZM11 8.00001C10.7348 8.00001 10.4804 8.10537 10.2929 8.2929C10.1054 8.48044 10 8.73479 10 9.00001C10 9.26523 10.1054 9.51958 10.2929 9.70712C10.4804 9.89465 10.7348 10 11 10C11.2652 10 11.5196 9.89465 11.7071 9.70712C11.8946 9.51958 12 9.26523 12 9.00001C12 8.73479 11.8946 8.48044 11.7071 8.2929C11.5196 8.10537 11.2652 8.00001 11 8.00001ZM8.17 8.00001C8.3766 7.41448 8.75974 6.90744 9.2666 6.5488C9.77346 6.19015 10.3791 5.99756 11 5.99756C11.6209 5.99756 12.2265 6.19015 12.7334 6.5488C13.2403 6.90744 13.6234 7.41448 13.83 8.00001H15C15.2652 8.00001 15.5196 8.10537 15.7071 8.2929C15.8946 8.48044 16 8.73479 16 9.00001C16 9.26523 15.8946 9.51958 15.7071 9.70712C15.5196 9.89465 15.2652 10 15 10H13.83C13.6234 10.5855 13.2403 11.0926 12.7334 11.4512C12.2265 11.8099 11.6209 12.0025 11 12.0025C10.3791 12.0025 9.77346 11.8099 9.2666 11.4512C8.75974 11.0926 8.3766 10.5855 8.17 10H1C0.734784 10 0.48043 9.89465 0.292893 9.70712C0.105357 9.51958 0 9.26523 0 9.00001C0 8.73479 0.105357 8.48044 0.292893 8.2929C0.48043 8.10537 0.734784 8.00001 1 8.00001H8.17ZM5 14C4.73478 14 4.48043 14.1054 4.29289 14.2929C4.10536 14.4804 4 14.7348 4 15C4 15.2652 4.10536 15.5196 4.29289 15.7071C4.48043 15.8947 4.73478 16 5 16C5.26522 16 5.51957 15.8947 5.70711 15.7071C5.89464 15.5196 6 15.2652 6 15C6 14.7348 5.89464 14.4804 5.70711 14.2929C5.51957 14.1054 5.26522 14 5 14ZM2.17 14C2.3766 13.4145 2.75974 12.9074 3.2666 12.5488C3.77346 12.1902 4.37909 11.9976 5 11.9976C5.62091 11.9976 6.22654 12.1902 6.7334 12.5488C7.24026 12.9074 7.6234 13.4145 7.83 14H15C15.2652 14 15.5196 14.1054 15.7071 14.2929C15.8946 14.4804 16 14.7348 16 15C16 15.2652 15.8946 15.5196 15.7071 15.7071C15.5196 15.8947 15.2652 16 15 16H7.83C7.6234 16.5855 7.24026 17.0926 6.7334 17.4512C6.22654 17.8099 5.62091 18.0025 5 18.0025C4.37909 18.0025 3.77346 17.8099 3.2666 17.4512C2.75974 17.0926 2.3766 16.5855 2.17 16H1C0.734784 16 0.48043 15.8947 0.292893 15.7071C0.105357 15.5196 0 15.2652 0 15C0 14.7348 0.105357 14.4804 0.292893 14.2929C0.48043 14.1054 0.734784 14 1 14H2.17Z"
            fill="#CECECE"
          />
        </svg>

        <h3>Advanced Filters</h3>
      </header>
      <div className="filters">
        <label htmlFor="minLike">Minimum Likes</label>
        <InputRange id="minLike" min="0" max="100" def="20" />
        {/* for published */}
        <label htmlFor="published">Published</label>
        <InputRange id="published" min="0" max="100" />
        {/* No hashtag checkbox */}
        <span>
          <input type="checkbox" id="noHashtag" />
          <label htmlFor="noHashtag">No Hashtag</label>
        </span>
        {/* No Ticker */}
        <span>
          <input type="checkbox" id="noTicker" />
          <label htmlFor="noTicker">No Ticker</label>
        </span>
        {/* No Crypto */}
        <span>
          <input type="checkbox" id="noCrypto" />
          <label htmlFor="noCrypto">No Crypto</label>
        </span>
        {/* Include tweets */}
        <span>
          <input type="checkbox" id="includeTweets" />
          <label htmlFor="includeTweets">Include Tweets</label>
        </span>
        {/* Include LinkedIn Posts */}
        <span>
          <input type="checkbox" id="includeLinkedInPosts" />
          <label htmlFor="includeLinkedInPosts">Include LinkedIn Posts</label>
        </span>

        <div className="btns">
          <button className="accent-outline">Reset</button>
          <button className="accent" onClick={() => setVisible(false)}>
            Apply
          </button>
        </div>
      </div>
    </div>
  );
};

const Tag = ({ text }) => {
  const [active, setActive] = useState(false);
  return (
    <span className={active ? "active" : ""} onClick={() => setActive(!active)}>
      {text}
    </span>
  );
};

const InputRange = ({ className = "", id = "", min = 0, max = 100, def }) => {
  const ref = useRef(null);

  useEffect(() => {
    ref.current.style.setProperty("--val", ref.current.value);
  }, []);

  return (
    <input
      ref={ref}
      id={id}
      type="range"
      min={min}
      max={max}
      className={className}
      defaultValue={def}
      onChange={(e) => {
        e.target.style.setProperty("--val", e.target.value);
      }}
    />
  );
};

export default Search;
